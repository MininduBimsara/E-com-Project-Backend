# docker-compose.services.yml
version: '3.8'

networks:
  ecostore-network:
    driver: bridge

services:
  # MongoDB for Order Service
  mongo-order:
    image: mongo:6.0
    container_name: ecostore-mongo-order
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: order-service
    ports:
      - "27018:27017"
    volumes:
      - mongo-order-data:/data/db
      - ./init-mongo-order.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ecostore-network

  # MongoDB for Payment Service
  mongo-payment:
    image: mongo:6.0
    container_name: ecostore-mongo-payment
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: payment-service
    ports:
      - "27019:27017"
    volumes:
      - mongo-payment-data:/data/db
      - ./init-mongo-payment.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ecostore-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: ecostore-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: ecostore
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - ecostore-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  # API Gateway Service
  gateway:
    build:
      context: ./backend/services/Gateway
      dockerfile: Dockerfile
    container_name: ecostore-gateway
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      FRONTEND_URL: http://localhost:5173
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    ports:
      - "5000:5000"
    networks:
      - ecostore-network
    depends_on:
      - order-service
      - payment-service
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Order Service
  order-service:
    build:
      context: ./backend/services/order-service
      dockerfile: Dockerfile
    container_name: ecostore-order-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4003
      MONGO_URI: mongodb://admin:password123@mongo-order:27017/order-service?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:5173
      CART_SERVICE_URL: http://localhost:4002
      PRODUCT_SERVICE_URL: http://localhost:4001
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672/ecostore
      RABBITMQ_EXCHANGE: ecostore.events
      RABBITMQ_QUEUE_PREFIX: ecostore
      ENABLE_RABBITMQ: "true"
    ports:
      - "4003:4003"
    networks:
      - ecostore-network
    depends_on:
      - mongo-order
      - rabbitmq
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Payment Service
  payment-service:
    build:
      context: ./backend/services/payment-service
      dockerfile: Dockerfile
    container_name: ecostore-payment-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4004
      MONGO_URI: mongodb://admin:password123@mongo-payment:27017/payment-service?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:5173
      ORDER_SERVICE_URL: http://order-service:4003
      PAYPAL_CLIENT_ID: your-paypal-client-id
      PAYPAL_CLIENT_SECRET: your-paypal-client-secret
      PAYPAL_MODE: sandbox
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672/ecostore
      RABBITMQ_EXCHANGE: ecostore.events
      RABBITMQ_QUEUE_PREFIX: ecostore
      ENABLE_RABBITMQ: "true"
    ports:
      - "4004:4004"
    networks:
      - ecostore-network
    depends_on:
      - mongo-payment
      - rabbitmq
      - order-service
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongo-order-data:
    driver: local
  mongo-payment-data:
    driver: local
  rabbitmq-data:
    driver: local